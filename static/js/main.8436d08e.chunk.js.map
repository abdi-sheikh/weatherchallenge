{"version":3,"sources":["components/Form.js","App.js","serviceWorker.js","index.js"],"names":["Form","onSubmit","this","props","getWeatherData","class","type","name","placeholder","aria-label","required","value","disabled","selected","React","Component","WEATHER_API","process","LONGLAT_API","App","state","data","longlatdata","middayWeather","ls","e","a","preventDefault","city","target","elements","country","fetch","longlat_api","json","lat","results","locations","latLng","lng","weather_api","setState","fiveDayForecast","list","i","daily","length","today","days","time","icon","temperatureHigh","temperatureLow","summary","push","map","className","convertUnixTime","day","color","img","replace","toUpperCase","autoplay","size","Math","round","tempHigh","tempLow","unixDate","date","Date","year","getFullYear","getMonth","getDate","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8436d08e.chunk.js","sourcesContent":["import React from 'react';\nimport '../App.css';\nclass Form extends React.Component {\n    render(){\n      return(\n          <form onSubmit={this.props.getWeatherData}>\n            <div class=\"form-row align-items-center\">\n              <div class=\"col\">\n                <div class=\"md-form mt-0\">\n                  <input class = 'form-control' type = \"text\" name= 'city' placeholder=\"City\" aria-label=\"Search\" required=\"true\"/>\n                </div>\n              </div>\n              <div class=\"col\">\n                <div class=\"md-form mt-0\">\n                  <input class = 'form-control' type = \"text\" name= 'state' placeholder=\"State (US cities only)\" aria-label=\"Search\"/>\n                </div>\n              </div>\n              <div class=\"col\">\n                <div>\n                  <select class=\"browser-default custom-select\" name = 'country' required=\"true\">\n                    <option value=\"\" disabled selected>Choose your Country</option>\n                    <option value=\"United States of America\">United States of America</option>\n                    <option value=\"Afganistan\">Afghanistan</option>\n                    <option value=\"Albania\">Albania</option>\n                    <option value=\"Algeria\">Algeria</option>\n                    <option value=\"American Samoa\">American Samoa</option>\n                    <option value=\"Andorra\">Andorra</option>\n                    <option value=\"Angola\">Angola</option>\n                    <option value=\"Anguilla\">Anguilla</option>\n                    <option value=\"Antigua & Barbuda\">Antigua & Barbuda</option>\n                    <option value=\"Argentina\">Argentina</option>\n                    <option value=\"Armenia\">Armenia</option>\n                    <option value=\"Aruba\">Aruba</option>\n                    <option value=\"Australia\">Australia</option>\n                    <option value=\"Austria\">Austria</option>\n                    <option value=\"Azerbaijan\">Azerbaijan</option>\n                    <option value=\"Bahamas\">Bahamas</option>\n                    <option value=\"Bahrain\">Bahrain</option>\n                    <option value=\"Bangladesh\">Bangladesh</option>\n                    <option value=\"Barbados\">Barbados</option>\n                    <option value=\"Belarus\">Belarus</option>\n                    <option value=\"Belgium\">Belgium</option>\n                    <option value=\"Belize\">Belize</option>\n                    <option value=\"Benin\">Benin</option>\n                    <option value=\"Bermuda\">Bermuda</option>\n                    <option value=\"Bhutan\">Bhutan</option>\n                    <option value=\"Bolivia\">Bolivia</option>\n                    <option value=\"Bonaire\">Bonaire</option>\n                    <option value=\"Bosnia & Herzegovina\">Bosnia & Herzegovina</option>\n                    <option value=\"Botswana\">Botswana</option>\n                    <option value=\"Brazil\">Brazil</option>\n                    <option value=\"British Indian Ocean Ter\">British Indian Ocean Ter</option>\n                    <option value=\"Brunei\">Brunei</option>\n                    <option value=\"Bulgaria\">Bulgaria</option>\n                    <option value=\"Burkina Faso\">Burkina Faso</option>\n                    <option value=\"Burundi\">Burundi</option>\n                    <option value=\"Cambodia\">Cambodia</option>\n                    <option value=\"Cameroon\">Cameroon</option>\n                    <option value=\"Canada\">Canada</option>\n                    <option value=\"Canary Islands\">Canary Islands</option>\n                    <option value=\"Cape Verde\">Cape Verde</option>\n                    <option value=\"Cayman Islands\">Cayman Islands</option>\n                    <option value=\"Central African Republic\">Central African Republic</option>\n                    <option value=\"Chad\">Chad</option>\n                    <option value=\"Channel Islands\">Channel Islands</option>\n                    <option value=\"Chile\">Chile</option>\n                    <option value=\"China\">China</option>\n                    <option value=\"Christmas Island\">Christmas Island</option>\n                    <option value=\"Cocos Island\">Cocos Island</option>\n                    <option value=\"Colombia\">Colombia</option>\n                    <option value=\"Comoros\">Comoros</option>\n                    <option value=\"Congo\">Congo</option>\n                    <option value=\"Cook Islands\">Cook Islands</option>\n                    <option value=\"Costa Rica\">Costa Rica</option>\n                    <option value=\"Cote DIvoire\">Cote DIvoire</option>\n                    <option value=\"Croatia\">Croatia</option>\n                    <option value=\"Cuba\">Cuba</option>\n                    <option value=\"Curaco\">Curacao</option>\n                    <option value=\"Cyprus\">Cyprus</option>\n                    <option value=\"Czech Republic\">Czech Republic</option>\n                    <option value=\"Denmark\">Denmark</option>\n                    <option value=\"Djibouti\">Djibouti</option>\n                    <option value=\"Dominica\">Dominica</option>\n                    <option value=\"Dominican Republic\">Dominican Republic</option>\n                    <option value=\"East Timor\">East Timor</option>\n                    <option value=\"Ecuador\">Ecuador</option>\n                    <option value=\"Egypt\">Egypt</option>\n                    <option value=\"El Salvador\">El Salvador</option>\n                    <option value=\"Equatorial Guinea\">Equatorial Guinea</option>\n                    <option value=\"Eritrea\">Eritrea</option>\n                    <option value=\"Estonia\">Estonia</option>\n                    <option value=\"Ethiopia\">Ethiopia</option>\n                    <option value=\"Falkland Islands\">Falkland Islands</option>\n                    <option value=\"Faroe Islands\">Faroe Islands</option>\n                    <option value=\"Fiji\">Fiji</option>\n                    <option value=\"Finland\">Finland</option>\n                    <option value=\"France\">France</option>\n                    <option value=\"French Guiana\">French Guiana</option>\n                    <option value=\"French Polynesia\">French Polynesia</option>\n                    <option value=\"French Southern Ter\">French Southern Ter</option>\n                    <option value=\"Gabon\">Gabon</option>\n                    <option value=\"Gambia\">Gambia</option>\n                    <option value=\"Georgia\">Georgia</option>\n                    <option value=\"Germany\">Germany</option>\n                    <option value=\"Ghana\">Ghana</option>\n                    <option value=\"Gibraltar\">Gibraltar</option>\n                    <option value=\"Great Britain\">Great Britain</option>\n                    <option value=\"Greece\">Greece</option>\n                    <option value=\"Greenland\">Greenland</option>\n                    <option value=\"Grenada\">Grenada</option>\n                    <option value=\"Guadeloupe\">Guadeloupe</option>\n                    <option value=\"Guam\">Guam</option>\n                    <option value=\"Guatemala\">Guatemala</option>\n                    <option value=\"Guinea\">Guinea</option>\n                    <option value=\"Guyana\">Guyana</option>\n                    <option value=\"Haiti\">Haiti</option>\n                    <option value=\"Hawaii\">Hawaii</option>\n                    <option value=\"Honduras\">Honduras</option>\n                    <option value=\"Hong Kong\">Hong Kong</option>\n                    <option value=\"Hungary\">Hungary</option>\n                    <option value=\"Iceland\">Iceland</option>\n                    <option value=\"Indonesia\">Indonesia</option>\n                    <option value=\"India\">India</option>\n                    <option value=\"Iran\">Iran</option>\n                    <option value=\"Iraq\">Iraq</option>\n                    <option value=\"Ireland\">Ireland</option>\n                    <option value=\"Isle of Man\">Isle of Man</option>\n                    <option value=\"Israel\">Israel</option>\n                    <option value=\"Italy\">Italy</option>\n                    <option value=\"Jamaica\">Jamaica</option>\n                    <option value=\"Japan\">Japan</option>\n                    <option value=\"Jordan\">Jordan</option>\n                    <option value=\"Kazakhstan\">Kazakhstan</option>\n                    <option value=\"Kenya\">Kenya</option>\n                    <option value=\"Kiribati\">Kiribati</option>\n                    <option value=\"Korea North\">Korea North</option>\n                    <option value=\"Korea Sout\">Korea South</option>\n                    <option value=\"Kuwait\">Kuwait</option>\n                    <option value=\"Kyrgyzstan\">Kyrgyzstan</option>\n                    <option value=\"Laos\">Laos</option>\n                    <option value=\"Latvia\">Latvia</option>\n                    <option value=\"Lebanon\">Lebanon</option>\n                    <option value=\"Lesotho\">Lesotho</option>\n                    <option value=\"Liberia\">Liberia</option>\n                    <option value=\"Libya\">Libya</option>\n                    <option value=\"Liechtenstein\">Liechtenstein</option>\n                    <option value=\"Lithuania\">Lithuania</option>\n                    <option value=\"Luxembourg\">Luxembourg</option>\n                    <option value=\"Macau\">Macau</option>\n                    <option value=\"Macedonia\">Macedonia</option>\n                    <option value=\"Madagascar\">Madagascar</option>\n                    <option value=\"Malaysia\">Malaysia</option>\n                    <option value=\"Malawi\">Malawi</option>\n                    <option value=\"Maldives\">Maldives</option>\n                    <option value=\"Mali\">Mali</option>\n                    <option value=\"Malta\">Malta</option>\n                    <option value=\"Marshall Islands\">Marshall Islands</option>\n                    <option value=\"Martinique\">Martinique</option>\n                    <option value=\"Mauritania\">Mauritania</option>\n                    <option value=\"Mauritius\">Mauritius</option>\n                    <option value=\"Mayotte\">Mayotte</option>\n                    <option value=\"Mexico\">Mexico</option>\n                    <option value=\"Midway Islands\">Midway Islands</option>\n                    <option value=\"Moldova\">Moldova</option>\n                    <option value=\"Monaco\">Monaco</option>\n                    <option value=\"Mongolia\">Mongolia</option>\n                    <option value=\"Montserrat\">Montserrat</option>\n                    <option value=\"Morocco\">Morocco</option>\n                    <option value=\"Mozambique\">Mozambique</option>\n                    <option value=\"Myanmar\">Myanmar</option>\n                    <option value=\"Nambia\">Nambia</option>\n                    <option value=\"Nauru\">Nauru</option>\n                    <option value=\"Nepal\">Nepal</option>\n                    <option value=\"Netherland Antilles\">Netherland Antilles</option>\n                    <option value=\"Netherlands\">Netherlands (Holland, Europe)</option>\n                    <option value=\"Nevis\">Nevis</option>\n                    <option value=\"New Caledonia\">New Caledonia</option>\n                    <option value=\"New Zealand\">New Zealand</option>\n                    <option value=\"Nicaragua\">Nicaragua</option>\n                    <option value=\"Niger\">Niger</option>\n                    <option value=\"Nigeria\">Nigeria</option>\n                    <option value=\"Niue\">Niue</option>\n                    <option value=\"Norfolk Island\">Norfolk Island</option>\n                    <option value=\"Norway\">Norway</option>\n                    <option value=\"Oman\">Oman</option>\n                    <option value=\"Pakistan\">Pakistan</option>\n                    <option value=\"Palau Island\">Palau Island</option>\n                    <option value=\"Palestine\">Palestine</option>\n                    <option value=\"Panama\">Panama</option>\n                    <option value=\"Papua New Guinea\">Papua New Guinea</option>\n                    <option value=\"Paraguay\">Paraguay</option>\n                    <option value=\"Peru\">Peru</option>\n                    <option value=\"Phillipines\">Philippines</option>\n                    <option value=\"Pitcairn Island\">Pitcairn Island</option>\n                    <option value=\"Poland\">Poland</option>\n                    <option value=\"Portugal\">Portugal</option>\n                    <option value=\"Puerto Rico\">Puerto Rico</option>\n                    <option value=\"Qatar\">Qatar</option>\n                    <option value=\"Republic of Montenegro\">Republic of Montenegro</option>\n                    <option value=\"Republic of Serbia\">Republic of Serbia</option>\n                    <option value=\"Reunion\">Reunion</option>\n                    <option value=\"Romania\">Romania</option>\n                    <option value=\"Russia\">Russia</option>\n                    <option value=\"Rwanda\">Rwanda</option>\n                    <option value=\"St Barthelemy\">St Barthelemy</option>\n                    <option value=\"St Eustatius\">St Eustatius</option>\n                    <option value=\"St Helena\">St Helena</option>\n                    <option value=\"St Kitts-Nevis\">St Kitts-Nevis</option>\n                    <option value=\"St Lucia\">St Lucia</option>\n                    <option value=\"St Maarten\">St Maarten</option>\n                    <option value=\"St Pierre & Miquelon\">St Pierre & Miquelon</option>\n                    <option value=\"St Vincent & Grenadines\">St Vincent & Grenadines</option>\n                    <option value=\"Saipan\">Saipan</option>\n                    <option value=\"Samoa\">Samoa</option>\n                    <option value=\"Samoa American\">Samoa American</option>\n                    <option value=\"San Marino\">San Marino</option>\n                    <option value=\"Sao Tome & Principe\">Sao Tome & Principe</option>\n                    <option value=\"Saudi Arabia\">Saudi Arabia</option>\n                    <option value=\"Senegal\">Senegal</option>\n                    <option value=\"Seychelles\">Seychelles</option>\n                    <option value=\"Sierra Leone\">Sierra Leone</option>\n                    <option value=\"Singapore\">Singapore</option>\n                    <option value=\"Slovakia\">Slovakia</option>\n                    <option value=\"Slovenia\">Slovenia</option>\n                    <option value=\"Solomon Islands\">Solomon Islands</option>\n                    <option value=\"Somalia\">Somalia</option>\n                    <option value=\"South Africa\">South Africa</option>\n                    <option value=\"Spain\">Spain</option>\n                    <option value=\"Sri Lanka\">Sri Lanka</option>\n                    <option value=\"Sudan\">Sudan</option>\n                    <option value=\"Suriname\">Suriname</option>\n                    <option value=\"Swaziland\">Swaziland</option>\n                    <option value=\"Sweden\">Sweden</option>\n                    <option value=\"Switzerland\">Switzerland</option>\n                    <option value=\"Syria\">Syria</option>\n                    <option value=\"Tahiti\">Tahiti</option>\n                    <option value=\"Taiwan\">Taiwan</option>\n                    <option value=\"Tajikistan\">Tajikistan</option>\n                    <option value=\"Tanzania\">Tanzania</option>\n                    <option value=\"Thailand\">Thailand</option>\n                    <option value=\"Togo\">Togo</option>\n                    <option value=\"Tokelau\">Tokelau</option>\n                    <option value=\"Tonga\">Tonga</option>\n                    <option value=\"Trinidad & Tobago\">Trinidad & Tobago</option>\n                    <option value=\"Tunisia\">Tunisia</option>\n                    <option value=\"Turkey\">Turkey</option>\n                    <option value=\"Turkmenistan\">Turkmenistan</option>\n                    <option value=\"Turks & Caicos Is\">Turks & Caicos Is</option>\n                    <option value=\"Tuvalu\">Tuvalu</option>\n                    <option value=\"Uganda\">Uganda</option>\n                    <option value=\"United Kingdom\">United Kingdom</option>\n                    <option value=\"Ukraine\">Ukraine</option>\n                    <option value=\"United Arab Erimates\">United Arab Emirates</option>\n                    <option value=\"Uraguay\">Uruguay</option>\n                    <option value=\"Uzbekistan\">Uzbekistan</option>\n                    <option value=\"Vanuatu\">Vanuatu</option>\n                    <option value=\"Vatican City State\">Vatican City State</option>\n                    <option value=\"Venezuela\">Venezuela</option>\n                    <option value=\"Vietnam\">Vietnam</option>\n                    <option value=\"Virgin Islands (Brit)\">Virgin Islands (Brit)</option>\n                    <option value=\"Virgin Islands (USA)\">Virgin Islands (USA)</option>\n                    <option value=\"Wake Island\">Wake Island</option>\n                    <option value=\"Wallis & Futana Is\">Wallis & Futana Is</option>\n                    <option value=\"Yemen\">Yemen</option>\n                    <option value=\"Zaire\">Zaire</option>\n                    <option value=\"Zambia\">Zambia</option>\n                    <option value=\"Zimbabwe\">Zimbabwe</option>\n                  </select>\n                </div>\n              </div>\n            <div class=\"col\">\n              <div>\n                <button class=\"btn peach-gradient\">Submit</button>\n              </div>\n            </div>\n          </div>\n        </form>\n\n      );\n      \n    }\n\n};\n\nexport default Form;\n","import React from 'react';\nimport ReactAnimatedWeather from 'react-animated-weather';\nimport Form from \"./components/Form\";\nimport './App.css';\n\nconst WEATHER_API = `${process.env.REACT_APP_WEATHER_API_KEY}`;\nconst LONGLAT_API = `${process.env.REACT_APP_LONGLAT_API_KEY}`;\nclass App extends React.Component{\n\n    state = {\n      data: [],\n      longlatdata: [],\n      middayWeather: [],\n      ls: \"\"\n    }\n\n  //call api and store response in data, and check if response loaded or not.\n  getWeatherData = async (e) =>{\n    e.preventDefault();\n    var {longlatdata,data} = this.state;\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n    const state = e.target.elements.state.value;\n    const longlat_api = await fetch(`https://www.mapquestapi.com/geocoding/v1/address?key=${LONGLAT_API}&location=${city},${state},${country}`);\n    longlatdata = await longlat_api.json();\n    const lat = longlatdata.results[0].locations[0].latLng.lat;\n    const lng = longlatdata.results[0].locations[0].latLng.lng;\n    const weather_api = await fetch(`https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/${WEATHER_API}/${lat},${lng}?exclude=currently,minutely,hourly`);\n    data = await weather_api.json();\n    \n    this.setState({middayWeather: []});\n    return (this.fiveDayForecast(data));\n         \n  }\n\n\n  //Loop through the data, take 3rd timestamp in each day and grab necessary information from api response and added it to middayWeather array.\n  fiveDayForecast(data){\n    var {middayWeather} = this.state;\n    let list;\n    //console.log(data);\n    for(let i = 0; i < data.daily.data.length-3; i++){\n      const today = new days(data.daily.data[i].time,\n                              data.daily.data[i].icon,\n                              data.daily.data[i].temperatureHigh,\n                              data.daily.data[i].temperatureLow,\n                              data.daily.data[i].summary);\n\n      middayWeather.push(today);\n      \n      list = middayWeather.map(today =>{\n        return <div>\n        <div className = \"day\">\n          <div className = \"date\">\n          <h2>{this.convertUnixTime(today.day)}</h2>\n          </div>\n          <div className = \"summary\">\n           <p>{today.summary}</p>\n          </div>\n          <div className = 'image'>\n            <ReactAnimatedWeather \n              color='orange' \n              icon= {today.img.replace(/-/g,'_').toUpperCase()} \n              autoplay={true}\n              size = {64}\n            />\n          </div>\n          <div className = 'temp'>\n            {Math.round(today.tempHigh)} <span>&#176;</span> / {Math.round(today.tempLow)} <span>&#176;</span>\n          </div>\n        </div>\n      </div>\n      })\n    }\n    this.setState({ls: list})\n  }\n\n\n  \n  convertUnixTime(unixDate){\n\n    // Unixtimestamp\n    var unixtimestamp = unixDate;\n   \n    // Months array\n    var months_arr = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n   \n    // Convert timestamp to milliseconds\n    var date = new Date(unixtimestamp*1000);\n   \n    // Year\n    var year = date.getFullYear();\n   \n    // Month\n    var month = months_arr[date.getMonth()];\n   \n    // Day\n    var day = date.getDate();\n      \n    // Display date time in MM-dd-yyyyformat\n    var convdataTime = month+'-'+day+'-'+year;\n    \n    return convdataTime;\n    \n   }\n\n\n  render(){\n      \n      return(\n        \n          <div>\n            <h1>5 Day Forecast </h1>\n            <Form getWeatherData={this.getWeatherData}/>\n            <div className = 'forecast'>\n              \n              {this.state.ls}\n            </div>\n            \n            \n          </div>\n      \n      );\n    }\n}\n\n\n//constructor class for days\nclass days {\n  constructor(day, img, tempHigh,tempLow,summary) {\n    this.day = day;\n    this.img = img;\n    this.tempHigh = tempHigh;\n    this.tempLow = tempLow;\n    this.summary = summary;\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}